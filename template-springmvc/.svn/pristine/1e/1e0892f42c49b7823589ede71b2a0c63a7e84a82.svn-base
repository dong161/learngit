<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kanq.train</groupId>
	<artifactId>basic</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>basic-project</name>
	<url>http://maven.apache.org</url>
 
 	<!-- 此项目作为培训模板; 基础项目模板迁移为一窗受理 -->
   
	<!-- Jar版本管理 -->
	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>

		<thymeleaf.version>2.1.5.RELEASE</thymeleaf.version>

		<mybatis.version>3.2.2</mybatis.version>
		<slf4j.version>1.7.25</slf4j.version>
		<log4j2.version>2.8.2</log4j2.version>

		<junit.version>4.12</junit.version>
		<guava.version>14.0.1</guava.version>

		<servlet.version>3.1.0</servlet.version>


		<springframework.version>4.3.12.RELEASE</springframework.version>
		<springboot.version>1.5.8.RELEASE</springboot.version>
		<aspectjweaver.version>1.8.11</aspectjweaver.version>

		<lombok.version>1.16.18</lombok.version>

		<cxf.version>3.1.1</cxf.version>
		<wss4j.version>2.2.1</wss4j.version>

		<jetty.version>9.2.10.v20150310</jetty.version>

		<!-- Apache -->
		<lang3.version>3.4</lang3.version>
		<io.version>2.4</io.version>
		<codec.version>1.9</codec.version>
		<fileupload.version>1.2.1</fileupload.version>
		<collections4.version>4.1</collections4.version>
		<beanutils.version>1.9.3</beanutils.version>
		<net.version>3.5</net.version>
		<commons.httpclient>3.1</commons.httpclient>
		<httpclient.version>4.5</httpclient.version>

		<shiro.version>1.3.2</shiro.version>

		<poi.version>3.8</poi.version>
		<poi.ooxml.version>3.8</poi.ooxml.version>
		<!-- alibaba -->
		<!-- <fastjson.version>1.1.27</fastjson.version> -->
		<fastjson.version>1.2.7</fastjson.version>
		<druid.version>1.1.3</druid.version>
		<ojdbc6.version>11.2.0.1.0</ojdbc6.version>
		<sqljdbc.version>4.0</sqljdbc.version>

		<freemarker.version>2.3.21</freemarker.version>
		<tomcat.version>7.0.5</tomcat.version>

		<!-- 二方库 -->
		<kanq.qd.version>2.1.4</kanq.qd.version>
		<kanq.affix.version>1.1.4</kanq.affix.version>
		<kanq.util.version>4.0.6</kanq.util.version>
	</properties>

	<!-- 发现依赖和扩展的远程仓库列表。 -->
	<repositories>
		<!-- kanq私服 -->
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>kanq-mvnRepository</id>
			<name>kanq-mvnRepository-proxy</name>
			<url>http://119.97.231.254:803/nexus/content/groups/kanq-maven/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<!-- 本人博客: 《Maven依赖 - parent》 -->
	<dependencyManagement>
		<dependencies>
			<!-- 统一管理Spring依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${springframework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--通过Spring Boot管理其他第三方版本 
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			-->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<!-- ///////////////////////////////////////  base package  ///////////////////////////// -->
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.18</version>
			<!-- 不需要打入生产包中 -->			
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- jfinal~jetty -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>3.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jetty-server</artifactId>
			<version>8.1.8</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<version>8.1.8.v20121106</version>
			<scope>provided</scope>
		</dependency>		
		

		<!-- |||||||||||||||||||||||||||||||||||||| log4j2 start -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- In order to properly support and handle the ClassLoader environment 
			and container lifecycle of a web application, an additional module is required. -->
		<!-- This module is only required at runtime. -->
		<!--  其实log4j-web是直接依赖于log4j~api, log4j~core; 所以上面两个是不用显式引入的 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<version>${log4j2.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- 桥接：告诉Slf4j使用Log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- 桥接：告诉commons logging使用Log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- JCL -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- |||||||||||||||||||||||||||||||||||||| mybatis start -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		
		<!-- |||||||||||||||||||||||||||||||||||||| Spring web mvc  start -->
		<!-- webmvc 直接依赖于core, context, beans, web, expression -->
		<!-- web 直接依赖于core, context, aop, beans -->
		<!-- aop 直接依赖于core, beans, aopalliance  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<!-- aspects直接依赖于 aspectjweaver ;;; 而aspectjweaver是使用AOP“注解”必备 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		
		<!-- jdbc 直接依赖于tx, core, beans -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>		

		<!-- 附件上传相关 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${fileupload.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>		

		
		<!-- |||||||||||||||||||||||||||||||||||||| Druid   -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
			<!-- 排除对JDK中的依赖 -->
			<exclusions>
				<exclusion>
					<groupId>com.alibaba</groupId>
					<artifactId>jconsole</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.alibaba</groupId>
					<artifactId>tools</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- |||||||||||||||||||||||||||||||||||||| jdbc  -->

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>${ojdbc6.version}</version>
		</dependency>
<!-- 
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>sqljdbc4</artifactId>
			<version>${sqljdbc.version}</version>
		</dependency>			
-->
		<!-- |||||||||||||||||||||||||||||||||||||| freemarker  -->
<!-- 		
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
-->
		
		<!-- |||||||||||||||||||||||||||||||||||||| Apache commons-io  -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${io.version}</version>
		</dependency>		
		
		<!-- |||||||||||||||||||||||||||||||||||||| Alibaba fastjson    -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>		
		
		
		<!-- |||||||||||||||||||||||||||||||||||||| shiro       -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- 直接依赖于core, web -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-cas</artifactId>
			<version>${shiro.version}</version>
		</dependency>        
        
		<!-- tomcat -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>${tomcat.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-coyote</artifactId>
			<version>${tomcat.version}</version>
			<scope>provided</scope>
		</dependency> 
		
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<!-- ///////////////////////////////////////////  二方库  //////////////////////////////// -->
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<dependency>
			<groupId>com.kanq.components</groupId>
			<artifactId>kanq-util</artifactId>
			<version>${kanq.util.version}</version>
		</dependency>

		<dependency>
			<groupId>com.kanq</groupId>
			<artifactId>kanq-qd-independence</artifactId>
			<version>${kanq.qd.version}</version>
		</dependency>
		
  
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<!-- ////////////////////////////////////// 自身特殊依赖    /////////////////////////////// -->
		<!-- //////////////////////////////////////////////////////////////////////////////////// -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.ooxml.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Can not find the tag library descriptor for "http://java.sun.com/jsp/jstl/core" -->
		<dependency><!-- unkown -->
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 更合理的用法可能是创建一个插件的基础 pom（plugin-pom），然后在上面的的 pom 中设置 parent 为 plugin-pom -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
